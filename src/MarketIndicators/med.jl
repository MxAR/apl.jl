@everywhere module med
	##===================================================================================
	##	smed (simple average)
	##===================================================================================
	export smed

	##-----------------------------------------------------------------------------------
	function smed(v::Array{Float64, 1}, n::Int64, l::Int64)
		a = 0.

		for i = 1:n:l
			a = a + v[i]
		end

		return (n*a)/l
	end


	##===================================================================================
	##	emed (linear average (weighted average))
	##===================================================================================
	export lmed

	##-----------------------------------------------------------------------------------
	function lmed(v::Array{Float64, 1}, pivot_weight::Float64, slope::Float64, n::Int64, l::Int64)
		a = 0.

		for i = 1:n:l
			a = a + c[i] * (pivot_weight-((i-1.)*slope))
		end

		return a
	end


	##===================================================================================
	##	emed (expotential average (weighted average))
	##===================================================================================
	export emed

	##-----------------------------------------------------------------------------------
	function emed(v::Array{Float64, 1}, pivot_weight::Float64, slope::Float64, n::Int64, l::Int64)
		a = 0.

		for i = 1:n:l
			a = a + c[i] * pivot_weight *  exp(-(slope*(i-1.))^2)
		end

		return a
	end
end
